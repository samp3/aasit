<script>
  refType = 1;
  optionalFields = [];
  requiredFields = [];

  funQueue = {};
  ref_id =  -1;
  reftype_id = -1;
  slug = "";
  ref_attribute_id = null;
  authenticity_token = null;
  removeFields = function(){
    $("h1").fadeOut();
    $("#createReff").remove()
    reftype_id = $("select[name='ref[reftype_id]']").val();
    slug = $("input[name='ref[slug]']").val()
    var text = $("#ref_reftype_id").find("option:selected").text();
    $("#ref_header").append("<h1>"+slug+"</h1>");
    $("#ref_type").append("<span>"+text+"</span>");
    $("#new_ref").remove()
    $("#ref_send").append("<button id=\"add_ref\">Lisää viite järjestelmään</button>")
    $('#add_ref').click(processFunQueue);
    funQueue["ref"] = {fun:postNewRef,value: function(){ return "moi";},type:reftype_id};

  };
  processFunQueue = function() {
    var keys = Object.keys(funQueue);
    var hasValue = [];
    keys.forEach(function(key){
      if(key != "ref"){
        var value = funQueue[key].value();
        if(value.length > 0) {
          hasValue.push(funQueue[key].type);
        }
      }

    });


    diff = requiredFields.filter(function(x) { return hasValue.indexOf(x) < 0 })
    if(diff == 0){
      if(funQueue["ref"] != undefined){
        var createRef = funQueue["ref"].fun;
        delete funQueue["ref"];
        createRef(processQueue);
      } else {
        processQueue({id: ref_id});
      }
    }else {
      $("#error").append("<p>Muista täyttää pakolliset kentät</p>");
    }

  };

  processQueue = function(data){
    if(ref_id == -1){
      ref_id = data.id;
    }
    var keys = Object.keys(funQueue);
    keys.forEach(function(key){
      var val = funQueue[key].value();
      if(val != ""){
        f = funQueue[key].fun
        delete funQueue[key];
        f(ref_id);

      }
    });
  };
  processAttributeData = function(ref_attribute_id,meta_div_id){
    history.pushState('data', '', '/refs/'+slug); //Huijaa url muistuttamaan show-näkymää
      $.get( '/ref_attributes/'+ref_attribute_id+'.json',
          {}, function(data){
            appendMetaField(ref_attribute_id,data.name,meta_div_id);
          },"json");
  };
  insertAttributeFields = function(){
    requiredFields.forEach(function(ref_attribute_id){
      processAttributeData(ref_attribute_id,"#required");
    });
    optionalFields.forEach(function(ref_attribute_id){
      processAttributeData(ref_attribute_id,"#optional");
    });
  };

  updateAttributeIDs = function(d){
    $.get( '/reftypes/'+refType+'.json',
        {}, function(data){
          optionalFields = data["optionalFieldsIds"];
          requiredFields = data["requiredFieldsIds"];
          insertAttributeFields();
        },"json");
  };

  appendMetaField = function(id,name,meta_div_id){
    div_id = name+id;
    select_name = "s"+name;
    $(meta_div_id).append('<div id=\"'+div_id+'\"></div>');
    $("#"+div_id).append('<select name=\"'+select_name+'\"><option value=\"'+id+'\">'+name+'</option></select>');
    $("#"+div_id).append('<input name=\"value_'+name+'\">');
    //$("#"+div_id).append('<button id=\"b_'+ name+'\" name=\"b_'+name+'\">Lisää '+name+'</button>');

    f = function me(ref_id){
      var params = {ref_metum:{
        ref_id: parseInt(ref_id),
        ref_attribute_id: id,
        value:  $("input[name=value_"+name+"]").val() }
      };
          $.post( '/ref_meta.json',
              params, function(data){
                console.log("ok");
                $("input[name=value_"+name).replaceWith(function () {return $('<span>'+name+'</span>')
                });
              },"json");

    };
    funQueue[name] = {fun:f,value: function(){return $("input[name=value_"+name+"]").val();},type:id}

  };
  postNewRef = function (success){
    $.post( '/refs.json',
        {ref:{
          slug: slug,
          reftype_id: reftype_id
        },
          authenticity_token: authenticity_token
        }, success,"json");
  };
  appendMetaHeaders = function (){
    $("#required").append("<h2>Pakolliset</h2>");
    $("#optional").append("<h2>Valinnaiset</h2>");
  }
  getRefdata = function(){
    var slug = $("input[name='ref[slug]']").val()
    $.get('/refs/'+slug+'.json')
        .fail(function(){
          console.log("Remove fields")
          removeFields();
          console.log("AppendMetaHeaders")
          appendMetaHeaders();
          console.log("updateAttributeIDs")
          updateAttributeIDs();
        });
  }


  $(function() {
    $('#createReff').click(getRefdata);
    authenticity_token = $("input[name='authenticity_token']").val();
    //Suoritetaan JQuery-jutut jos painaa enteriä
    $('#new_ref').on('keyup keypress', function(e) {
      var keyCode = e.keyCode || e.which;
      if (keyCode === 13) {
        e.preventDefault();
        getRefDate();
        return false;
      }
    });
  });
</script>

<section>
<%= form_for(@ref) do |f| %>
    <% if @ref.errors.any? %>
        <div id="error_explanation">
          <h2><%= pluralize(@ref.errors.count, "error") %> prohibited this ref from being saved:</h2>

          <ul>
            <% @ref.errors.full_messages.each do |message| %>
                <li><%= message %></li>
            <% end %>
          </ul>
        </div>
    <% end %>

    <div class="field">
      <%= f.label 'Tunniste' %>
      <%= f.text_field :slug %>
    </div>
      <%= f.label 'Tyyppi'%>
      <%= f.select :reftype_id, options_from_collection_for_select(@types,:id,:name) %>
    <div class="actions">

      <% f.submit %>

    </div>

<% end %>
  <button id="createReff" name="commit" value="Luo viite" >Anna viitteelle tunniste ja tyyppi</button>
  <div id="ref">
    <div id="ref_header"></div>
    <div id="ref_type"></div>
    <div id="meta">
      <div id="required"></div>
      <div id="optional"></div>
    </div>
    <div id="ref_send"></div>
    <div id="error"></div>
  </div>

</section>
